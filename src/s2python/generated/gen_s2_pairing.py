# generated by datamodel-codegen:
#   filename:  s2-over-ip-pairing
#   timestamp: 2025-02-28T14:52:45+00:00

from __future__ import annotations

from enum import Enum
from typing import List

from pydantic import BaseModel, ConfigDict, Field
from s2python.common import EnergyManagementRole as S2Role



class Deployment(Enum):
    WAN = 'WAN'
    LAN = 'LAN'


class Protocols(Enum):
    WebSocketSecure = 'WebSocketSecure'

    
class PairingInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    pairingUri: str
    token: str
    validUntil: str


class S2NodeDescription(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    brand: str
    logoUri: str
    type: str
    modelName: str
    userDefinedName: str
    role: S2Role
    deployment: Deployment


class PairingRequest(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    token: str
    publicKey: str
    s2ClientNodeId: str
    s2ClientNodeDescription: str
    supportedProtocols: List[Protocols]


class PairingResponse(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    s2ServerNodeId: str
    serverNodeDescription: str
    requestConnectionUri: str


class ConnectionRequest(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    s2ClientNodeId: str
    supportedProtocols: List[Protocols]


class ConnectionDetails(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    selectedProtocol: Protocols
    challenge: str
    connectionUri: str
