# generated by datamodel-codegen:
#   filename:  s2-over-ip-pairing
#   timestamp: 2025-02-28T14:52:45+00:00

from __future__ import annotations

from enum import Enum
from typing import List

from pydantic import BaseModel, ConfigDict, Field


class S2Role(str, Enum):
    CEM = "CEM"
    RM = "RM"


class Deployment(str, Enum):
    WAN = "WAN"
    LAN = "LAN"


class Protocols(str, Enum):
    WebSocketSecure = "WebSocketSecure"

class PairingToken(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    token: str

class PairingInfo(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    pairingUri: str
    token: str
    validUntil: str


class S2NodeDescription(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    brand: str
    logoUri: str
    type: str
    modelName: str
    userDefinedName: str
    role: S2Role
    deployment: Deployment


class PairingRequest(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    token: PairingToken
    publicKey: str
    s2ClientNodeId: str
    s2ClientNodeDescription: S2NodeDescription
    supportedProtocols: List[Protocols]


class PairingResponse(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    s2ServerNodeId: str
    serverNodeDescription: S2NodeDescription
    requestConnectionUri: str


class ConnectionRequest(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    s2ClientNodeId: str
    supportedProtocols: List[Protocols]


class ConnectionDetails(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    selectedProtocol: Protocols
    challenge: str
    connectionUri: str
