openapi: 3.0.3
info:
  version: "0.2"
  title: s2-over-ip pairing and connection initiation
  description: "Description of the pairing process over IP for S2"
paths:
  /requestPairing:
    post:
      description: Initiate pairing
      requestBody:
        description: TODO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PairingRequest'
      responses:
        '200':
          description: TODO
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PairingResponse'
        '400':
          description: TODO
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PairingResponseErrorMessage'
  /requestConnection:
    post:
      description: TODO
      requestBody:
        description: TODO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionRequest'
      responses:
        '200':
          description: TODO
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionDetails'
        '400':
          description: TODO
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionDetailsErrorMessage'
components:
  schemas:
    PairingInfo:
      type: object
      properties:
        pairingUri:
          type: string
          format: uri
        token:
          $ref: "#/components/schemas/PairingToken"
        validUntil:
          type: string
          format: date-time
    PairingRequest:
      type: object
      properties:
        token:
          $ref: "#/components/schemas/PairingToken"
        publicKey:
          type: string
          format: byte
        encryptionAlgorithm:
          type: string
          enum:
            - "RSA-OAEP-256"
        s2ClientNodeId:
          type: string
          format: uuid
        s2ClientNodeDescription:
          $ref: "#/components/schemas/S2NodeDescription"
    PairingResponse:
      type: object
      properties:
        s2ServerNodeId:
          type: string
          format: uuid
        serverNodeDescription:
          $ref: "#/components/schemas/S2NodeDescription"
    PairingResponseErrorMessage:
      type: object
      properties:
        errorMessage:
          type: string
          enum:
            - "Invalid token"
            - "Invalid public key"
            - "Unknown encryption algorithm"
            - "Invalid combination of roles"
            - "Already paired"
            - "Parsing error"
            - "Other"
        additionalInfo:
          type: string
    ConnectionRequest:
      type: object
      properties:
        s2ClientNodeId:
          type: string
          format: uuid
    ConnectionDetails:
      type: object
      properties:
        challenge:
          type: string
          format: byte
        connectionUri:
          type: string
          format: uri
    ConnectionDetailsErrorMessage:
      type: object
      properties:
        errorMessage:
          type: string
          enum:
            - "Unknown node ID"
            - "Parsing error"
            - "Other"
        additionalInfo:
          type: string
    S2NodeDescription:
      required:
        - "brand"
        - "type"
        - "modelName"
      type: object
      description: To be done
      properties:
        brand:
          type: string
        logoUri:
          type: string
          format: uri
        type:
          type: string
        modelName:
          type: string
        userDefinedName:
          type: string
        role:
          $ref: "#/components/schemas/S2Role"
        deployment:
          $ref: "#/components/schemas/Deployment"
    S2Role:
      type: string
      enum:
        - CEM
        - RM
    Deployment:
      type: string
      enum:
        - WAN
        - LAN
    PairingToken:
      type: string
      pattern: "^[0-9a-zA-Z]{32}$"
